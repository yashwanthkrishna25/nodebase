// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id     String @id 
  email  String 
  name   String
  emailVerified Boolean @default(false)
  image  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  sessions Session[]
  accounts Account[]

  @@unique([email])
  @@map("users")
}

model Session {
    id String @id
    expiresAt DateTime
    token String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    ipAddress String?
    userAgent String?
    userId String
    user User @relation(fields: [userId], references: [id] , onDelete: Cascade)
    @@unique([token])
    @@map("sessions")
}


model Account {
    id String @id
    accountId String
    providerId String
    userId String
    user User @relation(fields: [userId], references: [id] , onDelete: Cascade)
    accessToken String?
    refreshToken String?
    idToken String?
    accessTokenExpiresAt DateTime?
    refreshTokenExpiresAt DateTime?
    scopes String?
    password String?
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

     @@map("accounts")
}

model Verification {
    id String @id
    identifier String
    value String
    expiresAt DateTime
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now()) @updatedAt

    @@map("verifications")
}

